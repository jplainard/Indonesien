// IndoFrench - Schéma de base de données Prisma
// Plateforme de traduction professionnelle indonésien-français

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "linux-musl-openssl-3.0.x"]
  output        = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  name         String?
  avatar       String?
  emailVerified DateTime?
  status       String   @default("active") // active, inactive, suspended
  lastLoginAt  DateTime?
  role         Role     @relation(fields: [roleId], references: [id])
  roleId       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  translations Translation[]
  sessions     Session[]
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String?
  users       User[]
}

model Translation {
  id               Int      @id @default(autoincrement())
  sourceText       String   @db.Text
  sourceLang       String
  targetText       String   @db.Text
  targetLang       String
  quality          Int?     @default(0) // Score de qualité 0-100
  isPublic         Boolean  @default(false)
  translationType  String   @default("auto") // auto, human, ai
  fileName         String?  // Nom du fichier source
  fileSize         Int?     // Taille du fichier en bytes
  translatedFile   String?  // Chemin vers le fichier traduit
  processingTime   Float?   // Temps de traitement en secondes
  segmentsCount    Int?     // Nombre de segments traduits
  method           String?  // Méthode de traduction utilisée
  createdAt        DateTime @default(now())
  user             User?    @relation(fields: [userId], references: [id])
  userId           Int?
  
  @@index([sourceLang, targetLang])
  @@index([userId])
}

model Session {
  id        String   @id @default(cuid())
  userId    Int
  expires   DateTime
  sessionToken String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
